<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="20" failures="0" errors="0" time="1.81">
  <testsuite name="AppModule" errors="0" failures="0" skipped="0" timestamp="2025-06-08T12:42:45" time="1.619" tests="3">
    <testcase classname="AppModule should be defined" name="AppModule should be defined" time="0.007">
    </testcase>
    <testcase classname="AppModule should have ConfigService available" name="AppModule should have ConfigService available" time="0.001">
    </testcase>
    <testcase classname="AppModule should have environment variables set" name="AppModule should have environment variables set" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ProductsService" errors="0" failures="0" skipped="0" timestamp="2025-06-08T12:42:45" time="1.647" tests="12">
    <testcase classname="ProductsService should be defined" name="ProductsService should be defined" time="0.006">
    </testcase>
    <testcase classname="ProductsService findAll should return paginated products" name="ProductsService findAll should return paginated products" time="0.001">
    </testcase>
    <testcase classname="ProductsService findById should return a product by id" name="ProductsService findById should return a product by id" time="0.001">
    </testcase>
    <testcase classname="ProductsService findById should return null if product not found" name="ProductsService findById should return null if product not found" time="0.001">
    </testcase>
    <testcase classname="ProductsService create should create a new product" name="ProductsService create should create a new product" time="0.001">
    </testcase>
    <testcase classname="ProductsService create should throw BadRequestException if product with same name exists" name="ProductsService create should throw BadRequestException if product with same name exists" time="0.006">
    </testcase>
    <testcase classname="ProductsService update should update a product" name="ProductsService update should update a product" time="0.001">
    </testcase>
    <testcase classname="ProductsService update should throw NotFoundException if product not found" name="ProductsService update should throw NotFoundException if product not found" time="0.001">
    </testcase>
    <testcase classname="ProductsService update should throw BadRequestException if product with same name exists" name="ProductsService update should throw BadRequestException if product with same name exists" time="0.001">
    </testcase>
    <testcase classname="ProductsService delete should delete a product" name="ProductsService delete should delete a product" time="0.001">
    </testcase>
    <testcase classname="ProductsService delete should throw NotFoundException if product not found" name="ProductsService delete should throw NotFoundException if product not found" time="0">
    </testcase>
    <testcase classname="ProductsService findByCategory should return paginated products by category" name="ProductsService findByCategory should return paginated products by category" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AuthService" errors="0" failures="0" skipped="0" timestamp="2025-06-08T12:42:45" time="1.69" tests="5">
    <testcase classname="AuthService should be defined" name="AuthService should be defined" time="0.005">
    </testcase>
    <testcase classname="AuthService signUp should create a new user and return a token" name="AuthService signUp should create a new user and return a token" time="0.002">
    </testcase>
    <testcase classname="AuthService signIn should return a token for valid credentials" name="AuthService signIn should return a token for valid credentials" time="0.001">
    </testcase>
    <testcase classname="AuthService signIn should throw UnauthorizedException for invalid credentials" name="AuthService signIn should throw UnauthorizedException for invalid credentials" time="0.004">
    </testcase>
    <testcase classname="AuthService signIn should throw UnauthorizedException when user is not found" name="AuthService signIn should throw UnauthorizedException when user is not found" time="0.001">
    </testcase>
  </testsuite>
</testsuites>